<!-- <center><img src="http://mooc.e-yantra.org/img/eYantra_logo.svg" alt="e-yantra_logo" style="scale:75%;" /></center> -->

<style>
.back{
	position: fixed;
	width: 250px;
	height: 250px;
	top: 50%;
	left: 50%;
    margin-top: auto; 
    margin-left: auto; 
	opacity: 0.15;
    z-index: -1;
	}
</style>
<!-- <img src="http://mooc.e-yantra.org/img/EyantraLogoMini.png" class="back"> -->


<h2><center>4. Verifying Installation</center></h2>

<hr>

<p align="justify" class="main">You can perform functional and timing simulation of design by using EDA simulation tools. We can simulate the design by two methods. These two methods are explained briefly below:</p>
<ol>
<li> <div align="justify" class="main">In the first method we set each input <b>A</b> and <b>B</b> manually and run the simulation to get the output <b>C</b>.</div></li>
<li><div align="justify" class="main">In the second method, write a test bench file using Verilog HDL to simulate design in ModelSim.</div></li>
</ol>

<h3> 1. Without TestBench</h3>

<ol>
<li>Click on <b>File→New→University Program VWF.</b></li>

<p align="center">
  <img src="./images/Simulation_without_tb/first.jpg">
</p> 

<li>In the New window, Go to <b>Edit→Insert→Insert Node or Bus.</b></li>

<p align="center">
  <img src="./images/Simulation_without_tb/second.png">
</p> 

<li>Click on <b>Node Finder</b>, in the New Window, Click on <b>List.</b></li>

<p align="center">
  <img src="./images/Simulation_without_tb/third.jpg">
</p> 

<li><p align="justify" class="main">Click on the highlighted button to add all the Nodes. Now Click on <b>OK</b> and then <b>OK</b> again.</p></li>

<p align="center">
  <img src="./images/Simulation_without_tb/fourth.jpg">
</p> 

> _**Note :** For our design <b>a</b> = <b>A</b>, <b>b</b> = <b>B</b> and <b>out</b> = <b>C</b>._

<li><p align="justify" class="main">Choose Input A and specify its value by choosing any of the options that are highlighted.</p></li>

<p align="center">
  <img src="./images/Simulation_without_tb/fifth.png">
</p> 

<li><p align="justify" class="main">For example, to give the Clock pulse to A input, select the node, then Click on the <b>Count Value</b> button highlighted at the top in the below figure, and then specify
the Clock Pulse of frequency 50ns.</p></li>

<p align="center">
  <img src="./images/Simulation_without_tb/sixth.png">
</p> 

<li>
<p align="justify" class="main">Similarly, specify the input pattern for input B with Clock Pulse of frequency 100ns and
then Click on the <b>Simulate Icon.</b> If a save prompt appears, then save the file.
<b>Do not change the file name and also do not change its location</b>. By default file name will be Waveform.vwf and it will be stored by default in the project folder. Once the simulation process completes, the waveform will be displayed.
<b>This is the waveform before the simulation starts.</b></p></li>

<p align="center">
  <img src="./images/Simulation_without_tb/seventh.png">
</p> 

<b>This is the waveform after the simulation ends.</b>

<p align="center">
  <img src="./images/Simulation_without_tb/seventh_1.png">
</p> 

</ol>

<h3>2. With Testbench and NativeLink <a name = "top"></a></h3>


<p align="justify" class="main">
Altera Quartus II software allows user to launch Modelsim-Altera simulator from within the software using the Quartus II feature called NativeLink. It facilitates the process of simulation
by providing an easy to use mechanism and precompiled libraries for simulation.</p>
<ol>
<li><p align="justify" class="main">Create a new Verilog HDL. Add the testbench code and then
save it in the same project directory (<b>AND_GATE</b> project). Verilog HDL test bench code is
provided below.</p></li>

<center>
<p align="center">
  <img src="./images/NewChangesImages/img2.jpg">
</p></center>

<b>Below is the Verilog HDL Test Bench Code for AND gate</b>
```verilog
// Verilog Test Bench code for AND gate
module And_Gate_Test_Bench ;
reg A;reg B;
wire C ;
// Defining unit under test i.e AND_GATE
AND_GATE uut (.A(A) ,.B(B) ,. C(C));
// Assigning all possible states for input A and B
initial begin

A = 0; B = 0; #100;
A = 0; B = 1; #100;
A = 1; B = 0; #100;
A = 1; B = 1; #100;

end
endmodule
```


<p align="justify" class="main">Save the file with correct name (same as module name i.e. And_Gate_Test_Bench) and correct file extension, for Verilog HDL it is <b>.v</b>
and then click on <b>Save.</b></p>

<p align="center">
  <img src="./images/NewChangesImages/testbench1.png">
</p> 


<li><b>Specify the path to Modelsim Altera</b></li>
<ul>
<li>Go to the menu <b>Tools → Options</b></li>
<li>In the <b>General</b> category, Select <b>EDA Tool Options.</b></li>
<li>A dialogue box appears, where you can specify the path of Modelsim-Altera executable file. And Click <b>OK.</b></li>
</ul>

<p align="center">
  <img src="./images/NewChangesImages/modelsim1.png">
</p> 

<li><b>NativeLink Settings to configure Modelsim-Altera</b></li>
<ul>
<li>Go to the menu <b>Assignments → Settings.</b></li>
<li>Under <b>EDA Tool Settings → Simulation.</b> The dialogue box for simulation appears.</li>
<li>For Tool Name, Choose <b>Modelsim-Altera.</b></li>
<li>Select <b>Verilog</b> as the Format for Output Netlist.</li>
<li>Select <b>simulation/modelsim</b> as the Output Directory.</li>
<li><div align="justify" class="main">Under NativeLink Settings, Choose <b>Compile Test Bench → Test Benches.</b> All these changes are indicated in the below figure.</div></li>
</ul>

<p align="center">
  <img src="./images/NewChangesImages/modelsim2.png">
</p> 

<ul>
<li>A new window appears Select <b>New.</b></li>
<p align="center">
  <img src="./images/nativelink/nativelink_3.png">
</p> 
</ul>

<ul>
<li>Another window appears with the name <b>New Test Bench Settings.</b></li>
<li>Enter the Test Bench Name and Top Level Module in test bench as shown below. <b>For both it should be "And_Gate_Test_Bench"</b></li>
<li><div align="justify" class="main">Add the Test Bench File(And_Gate_Test_Bench.v) that we created above in the previous section and then click <b>OK.</b> To add the testbench file <b>Click on 3 dots → Select the file → Click on Add </b></div></li>
</ul>

<p align="center">
  <img src="./images/NewChangesImages/modelsim4.png">
</p> 

</ol>


<h4> 2.1 Functional Simulation using NativeLink Feature:</h4>

<ol>
<li><p align="justify" class="main">Goto menu <b>Processing →Start→Start Analysis & Elaboration.</b>
After this Click on <b>Processing →Start→Start Analysis & Synthesis</b> on the same
drop box. These step checks the error and collects all file name information and builds the design
hierarchy for simulation.</p></li>

<p align="center">
  <img src="./images/nativelink/new analyse.png">
</p> 
<br />

<li><div align="justify" class="main">Go to menu <b>Tools → Run Simulation Tool → RTL Simulation</b>. It & automatically run EDA simulator (ModelSim-Altera) and compiles all necessary design files.</div></li>

<p align="center">
  <img src="./images/nativelink/native link run.png">
</p> 

<li><p align="justify" class="main">Finally ModelSim-Altera tool opens and you can view the waveforms. If waveforms do not appear then continue the steps.</p></li>
<li><p align="justify" class="main">In the Toolbar Click on <b>Simulate→Start Simulation</b> then a window will pop-up
Add the Test bench file as shown in the below figure.</p></li>

<p align="center">
  <img src="./images/NewChangesImages/modelanalyze1.png">
</p> 


<p align="justify" class="main">Add the I/O pins as shown in the below image. Select all the signals(A,B and C) and add it to ’wave’ section.</p>



<p align="center">
  <img src="./images/NewChangesImages/modelanalyze2.png">
</p> 

<li>Start the simulation by clicking on the <b>Run All</b> button in Toolbar.</li>

<p align="center">
  <img src="./images/NewChangesImages/runall.png">
</p> 

<p align="center">
  <img src="./images/NewChangesImages/modelanalyze3.png">
</p> 

<li><div align="justify" class="main"><b>Navigating the simulation</b> At this point you should have successfully run the simulation, 
but the waveform window is rather small and hard to see. We can move around in the simulation and see the value of the signals. 
Look for the cursor, a yellow vertical line in the waveform viewer, with the time in yellow at the bottom. You can use this line to move 
left or right in the waveform viewer and also zoom-in and zoom-out.</div></li>
<ul>
<li><div align="justify" class="main">Move the yellow vertical line across each set of inputs and output in the waveform, so
that you can see the level of each signal and compare them with the truth table of the
AND gate.</div></li>
<li><div align="justify" class="main">By doing this you will notice that when both the inputs are high then only output is high
or else it is low. which is actual logic for AND gate.</div></li>
<li>Follow this procedure for each experiment you perform to verify your design.</li>
</ul>
</ol>

<br /><br />




